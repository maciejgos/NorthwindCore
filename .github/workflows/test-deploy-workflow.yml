# This is a basic workflow to help you get started with Actions

name: Deploy Infrastructure

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v2
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}   
    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        azcliversion: 2.0.72
        inlineScript: |
          az group create --name ${{ secrets.RESOURCE_GROUP_NAME }} --location "westeurope"    
    
    - name: ARM deployment
      uses: whiteducksoftware/azure-arm-action@v3.2
      with:
        # Paste output of `az ad sp create-for-rbac -o json` as value of secret variable: AZURE_CREDENTIALS
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        # Provide the name of a resource group.
        resourceGroupName: ${{ secrets.RESOURCE_GROUP_NAME }}
        # Specify the path to the Azure Resource Manager template.
        templateLocation: src/infrastructure/azuredeploy.json
        # Specifies the name of the resource group deployment to create.
        deploymentName: Initial
        # Specify either path to the Azure Resource Manager parameters file or pass them as 'key1=value1;key2=value2;...'.
        parameters: src/infrastructure/azuredeploy.parameters.json
        
    - name: Azure SQL Deploy
      uses: Azure/sql-action@v1
      with:
        # Name of the Azure SQL Server name, like Fabrikam.database.windows.net.
        server-name: sqlserver-test001
        # The connection string, including authentication information, for the Azure SQL Server database.
        connection-string: ${{ secrets.TEST_CONNECTION_STRING }}
        # Path to SQL script file. *.sql or a folder to deploy
        sql-file: src/scripts/instnwnd.sql
